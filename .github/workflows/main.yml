on:
  push:
    paths-ignore:
      - '**.md'
      - '**.frag'
      - '**.vert'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.frag'
      - '**.vert'
  workflow_dispatch:

name: CI

env:
  RUST_TOOLCHAIN: stable
  TOOLCHAIN_PROFILE: minimal

jobs:
  test-linux:
    name: Run cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Load cache
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Install X11 dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --allow-unauthenticated -y -qq \
            libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
  test-windows:
    name: Run cargo test
    runs-on: windows-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Load cache
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
  lints:
    name: Run cargo fmt and cargo clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Load cache
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rustfmt, clippy
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
